#include <systemc.h>

#ifndef SC_TRACE
	#define sc_set_trace(obj) sc_trace(trace_file, obj, obj.name());
#endif

#ifndef rev
	#define rev(i, n) for(int i = n-1; i >= 0; i--)
#endif

#ifndef var_print /// variadic print
	#define var_print
	template<class T> void print(T what){cout << what;}
	template<class T, class... Args> void print(T what, Args... args){
		cout << what;
		print(args...);
	}
#endif

#ifndef _mono_pulse
	#define _mono_pulse
	void mono_pulse(sc_signal<bool> &pulse){
		pulse.write(0);
		sc_start(5, SC_NS);
		pulse.write(1);
		sc_start(5, SC_NS);
		pulse.write(0);
	};
#endif

int sc_main(int argc, char* argv[]) {
	

	sc_trace_file* trace_file = 
	sc_create_vcd_trace_file("wavetrace_output");
	trace_file->set_time_unit(1, SC_NS);

	cout << "Start sim...\n";

	cout << "\nFinished!\n";
        sc_close_vcd_trace_file(trace_file);
	return 0;
}

